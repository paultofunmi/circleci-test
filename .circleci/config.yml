defaults: &defaults
  docker:
    - image: circleci/node:13.8.0

version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1
# Orchestrate or schedule a set of jobs
commands:
  say_hello:
    description: "Simple Description"
    parameters:
      to:
        type: string
        default: "Hello Default"
    steps:
      - run: echo << parameters.to >>

  print_pipeline_id:
    description: "Simple Description"
    steps:
      - run: echo ${CIRCLE_WORKFLOW_ID}

jobs:
  print_hello:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: "Print Hello"
          command: "echo Hello!"

  print_hello_with_command:
    <<: *defaults
    steps:
      - say_hello:
          to: "Hello Tofunmi"
      - say_hello

  print_pipeline_id_with_command:
    <<: *defaults
    steps:
      - print_pipeline_id

  save_helloworld:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: "Save HelloWorld To File"
          command: echo "HelloWorld" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt

  print_outputfile:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - run:
          name: "Print File Content to console"
          command: cat ~/output.txt

  build:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - run:
          name: "echo an env var that is part of our project"
          command: |
            echo $MY_ENV_VAR

  test_onfail:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: "Return non zero"
          command: exit 1
      - run:
          name: "Log on failure"
          command: echo "Hello Error!"
          when: on_fail

workflows:
  dev-build:
    jobs:
      - welcome/run
      - print_hello
      - save_helloworld
      - print_outputfile:
          requires: [save_helloworld]
      - build
      - print_hello_with_command
      - print_pipeline_id_with_command
      - test_onfail
